name: Publish Kolada MCP

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  # 1) Build the distribution packages
  build:
    name: Build distribution 📦
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install build tool
        run: python -m pip install --upgrade build

      - name: Build a binary wheel and a source tarball
        run: python -m build

      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  # 2) Publish to PyPI only if the ref is a tag (startsWith(github.ref, 'refs/tags/'))
  publish-to-pypi:
    name: Publish Python 🐍 distribution 📦 to PyPI
    # Only run if this is a tag push
    if: startsWith(github.ref, 'refs/tags/')
    needs: [build]
    runs-on: ubuntu-latest

    # If using PyPI Trusted Publishers, set an environment to control deployment
    environment:
      name: pypi
      url: https://pypi.org/project/kolada-mcp

    # Required permission for trusted publishing (OIDC)
    permissions:
      id-token: write

    steps:
      - name: Download distributions
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Publish distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  github-release:
    name: Sign and attach artifacts to GitHub Release
    needs: [publish-to-pypi]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest

    # Must allow write permissions to contents for GH Releases,
    # plus id-token for sigstore's OIDC signing.
    permissions:
      contents: write
      id-token: write

    steps:
      - name: Download distributions
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Sign the distributions with Sigstore
        uses: sigstore/gh-action-sigstore-python@v3.0.0
        with:
          # Sign all .whl and .tar.gz in dist/
          inputs: >
            ./dist/*.whl
            ./dist/*.tar.gz

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          gh release create "$GITHUB_REF_NAME" --repo "$GITHUB_REPOSITORY" --notes ""

      - name: Upload artifacts + signatures to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          gh release upload "$GITHUB_REF_NAME" dist/** --repo "$GITHUB_REPOSITORY"
